"use strict";(()=>{var e={};e.id=7076,e.ids=[7076],e.modules={72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},27790:e=>{e.exports=require("assert")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},17702:e=>{e.exports=require("events")},32615:e=>{e.exports=require("http")},35240:e=>{e.exports=require("https")},86624:e=>{e.exports=require("querystring")},17360:e=>{e.exports=require("url")},21764:e=>{e.exports=require("util")},71568:e=>{e.exports=require("zlib")},76954:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>R,patchFetch:()=>b,requestAsyncStorage:()=>k,routeModule:()=>_,serverHooks:()=>I,staticGenerationAsyncStorage:()=>T});var o={};r.r(o),r.d(o,{GET:()=>P,POST:()=>x});var s=r(49303),a=r(88716),n=r(60670),i=r(87070),l=r(45609),c=r(90455);class p{constructor(e){this.requestCount=0,this.lastResetTime=Date.now(),this.config=e}checkRateLimit(){let e=Date.now();return e-this.lastResetTime>=6e4&&(this.requestCount=0,this.lastResetTime=e),(!this.config.rateLimit||!(this.requestCount>=this.config.rateLimit.requestsPerMinute))&&(this.requestCount++,!0)}formatMessages(e,t){let r=[...e];return t&&r.unshift({role:"system",content:t,timestamp:new Date}),r}isEnabled(){return this.config.enabled&&!!this.config.apiKey}getName(){return this.config.name}getPriority(){return this.config.priority}}class u extends p{constructor(e){super(e),this.baseUrl=e.baseUrl||"https://api.openai.com/v1"}async generateResponse(e,t){if(!this.checkRateLimit())throw Error("Rate limit exceeded for OpenAI provider");let r=Date.now();try{let o=this.formatMessages(e,t?.systemPrompt),s=await fetch(`${this.baseUrl}/chat/completions`,{method:"POST",headers:{Authorization:`Bearer ${this.config.apiKey}`,"Content-Type":"application/json"},body:JSON.stringify({model:this.config.model||"gpt-4",messages:o.map(e=>({role:e.role,content:e.content})),temperature:t?.temperature??this.config.temperature??.7,max_tokens:t?.maxTokens??this.config.maxTokens??2e3,top_p:this.config.topP??1,stream:!1})});if(!s.ok){let e=await s.json().catch(()=>({}));throw Error(`OpenAI API error: ${s.status} - ${e.error?.message||"Unknown error"}`)}let a=await s.json(),n=Date.now()-r;return{content:a.choices[0]?.message?.content||"",usage:{promptTokens:a.usage?.prompt_tokens||0,completionTokens:a.usage?.completion_tokens||0,totalTokens:a.usage?.total_tokens||0},model:a.model||this.config.model,provider:"openai",responseTime:n,metadata:{finishReason:a.choices[0]?.finish_reason,requestId:s.headers.get("x-request-id")}}}catch(e){throw Error(`OpenAI provider error: ${e instanceof Error?e.message:"Unknown error"}`)}}}class d extends p{constructor(e){super(e),this.baseUrl=e.baseUrl||"https://api.anthropic.com/v1"}async generateResponse(e,t){if(!this.checkRateLimit())throw Error("Rate limit exceeded for Claude provider");let r=Date.now();try{let o=t?.systemPrompt||"You are a helpful AI assistant for MyBeing, a self-discovery platform focused on psychology and personal growth.",s=e.filter(e=>"system"!==e.role).map(e=>({role:"assistant"===e.role?"assistant":"user",content:e.content})),a=await fetch(`${this.baseUrl}/messages`,{method:"POST",headers:{Authorization:`Bearer ${this.config.apiKey}`,"Content-Type":"application/json","anthropic-version":"2023-06-01"},body:JSON.stringify({model:this.config.model||"claude-3-sonnet-20240229",messages:s,system:o,max_tokens:t?.maxTokens??this.config.maxTokens??2e3,temperature:t?.temperature??this.config.temperature??.7,top_p:this.config.topP??1})});if(!a.ok){let e=await a.json().catch(()=>({}));throw Error(`Claude API error: ${a.status} - ${e.error?.message||"Unknown error"}`)}let n=await a.json(),i=Date.now()-r;return{content:n.content[0]?.text||"",usage:{promptTokens:n.usage?.input_tokens||0,completionTokens:n.usage?.output_tokens||0,totalTokens:(n.usage?.input_tokens||0)+(n.usage?.output_tokens||0)},model:n.model||this.config.model,provider:"claude",responseTime:i,metadata:{stopReason:n.stop_reason,requestId:a.headers.get("request-id")}}}catch(e){throw Error(`Claude provider error: ${e instanceof Error?e.message:"Unknown error"}`)}}}class h extends p{constructor(e){super(e),this.baseUrl=e.baseUrl||"https://generativelanguage.googleapis.com/v1beta"}async generateResponse(e,t){if(!this.checkRateLimit())throw Error("Rate limit exceeded for Gemini provider");let r=Date.now();try{let o=t?.systemPrompt||"You are a helpful AI assistant for MyBeing, a self-discovery platform focused on psychology and personal growth.",s=[];o&&(s.push({role:"user",parts:[{text:o}]}),s.push({role:"model",parts:[{text:"I understand. I'm ready to help with psychology and self-discovery topics."}]})),e.forEach(e=>{"system"!==e.role&&s.push({role:"assistant"===e.role?"model":"user",parts:[{text:e.content}]})});let a=this.config.model||"gemini-1.5-pro",n=`${this.baseUrl}/models/${a}:generateContent?key=${this.config.apiKey}`,i=await fetch(n,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({contents:s,generationConfig:{temperature:t?.temperature??this.config.temperature??.7,maxOutputTokens:t?.maxTokens??this.config.maxTokens??2e3,topP:this.config.topP??1},safetySettings:[{category:"HARM_CATEGORY_HARASSMENT",threshold:"BLOCK_MEDIUM_AND_ABOVE"},{category:"HARM_CATEGORY_HATE_SPEECH",threshold:"BLOCK_MEDIUM_AND_ABOVE"},{category:"HARM_CATEGORY_SEXUALLY_EXPLICIT",threshold:"BLOCK_MEDIUM_AND_ABOVE"},{category:"HARM_CATEGORY_DANGEROUS_CONTENT",threshold:"BLOCK_MEDIUM_AND_ABOVE"}]})});if(!i.ok){let e=await i.json().catch(()=>({}));throw Error(`Gemini API error: ${i.status} - ${e.error?.message||"Unknown error"}`)}let l=await i.json(),c=Date.now()-r,p=l.candidates?.[0];if(!p||!p.content)throw Error("No valid response from Gemini");return{content:p.content.parts[0]?.text||"",usage:{promptTokens:l.usageMetadata?.promptTokenCount||0,completionTokens:l.usageMetadata?.candidatesTokenCount||0,totalTokens:l.usageMetadata?.totalTokenCount||0},model:a,provider:"gemini",responseTime:c,metadata:{finishReason:p.finishReason,safetyRatings:p.safetyRatings}}}catch(e){throw Error(`Gemini provider error: ${e instanceof Error?e.message:"Unknown error"}`)}}}class m{constructor(e){this.providers=new Map,this.currentProviderIndex=0,this.config=e,this.initializeProviders()}initializeProviders(){this.config.providers.forEach(e=>{let t;if(e.enabled&&e.apiKey){switch(e.name.toLowerCase()){case"openai":t=new u(e);break;case"claude":case"anthropic":t=new d(e);break;case"gemini":case"google":t=new h(e);break;default:console.warn(`Unknown AI provider: ${e.name}`);return}this.providers.set(e.name,t)}})}async generateResponse(e,t){let r=this.getAvailableProviders();if(0===r.length)throw Error("No AI providers available");if(t?.preferredProvider){let r=this.providers.get(t.preferredProvider);if(r&&r.isEnabled())try{return await this.executeWithTimeout(r.generateResponse(e,t),this.config.timeout)}catch(e){console.warn(`Preferred provider ${t.preferredProvider} failed:`,e)}}let o=this.orderProvidersByStrategy(r),s=null;for(let r=0;r<this.config.retryAttempts;r++)for(let a of o)try{let r=await this.executeWithTimeout(a.generateResponse(e,t),this.config.timeout);return await this.logUsage(a.getName(),r),r}catch(e){s=e instanceof Error?e:Error("Unknown error"),console.warn(`Provider ${a.getName()} failed (attempt ${r+1}):`,e),await this.logFailure(a.getName(),s)}throw Error(`All AI providers failed. Last error: ${s?.message}`)}getAvailableProviders(){return Array.from(this.providers.values()).filter(e=>e.isEnabled())}orderProvidersByStrategy(e){switch(this.config.fallbackStrategy){case"priority":return e.sort((e,t)=>t.getPriority()-e.getPriority());case"round-robin":let t=[...e];for(let r=0;r<this.currentProviderIndex%e.length;r++)t.push(t.shift());return this.currentProviderIndex++,t;case"fastest":return e.sort((e,t)=>t.getPriority()-e.getPriority());default:return e}}async executeWithTimeout(e,t){return Promise.race([e,new Promise((e,r)=>{setTimeout(()=>r(Error("Request timeout")),t)})])}async logUsage(e,t){try{console.log(`AI Usage - Provider: ${e}, Tokens: ${t.usage?.totalTokens}, Time: ${t.responseTime}ms`)}catch(e){console.error("Failed to log AI usage:",e)}}async logFailure(e,t){try{console.error(`AI Failure - Provider: ${e}, Error: ${t.message}`)}catch(e){console.error("Failed to log AI failure:",e)}}getProviderStatus(){let e={};return this.providers.forEach((t,r)=>{e[r]={enabled:t.isEnabled(),name:t.getName(),priority:t.getPriority()}}),e}async healthCheck(){let e={},t={role:"user",content:'Hello, this is a health check. Please respond with "OK".',timestamp:new Date};for(let[r,o]of this.providers){if(!o.isEnabled()){e[r]=!1;continue}try{await this.executeWithTimeout(o.generateResponse([t],{maxTokens:10}),5e3),e[r]=!0}catch(t){e[r]=!1}}return e}}let g={providers:[{name:"openai",apiKey:process.env.OPENAI_API_KEY||"",model:process.env.OPENAI_MODEL||"gpt-4",maxTokens:2e3,temperature:.7,enabled:!!process.env.OPENAI_API_KEY,priority:100,rateLimit:{requestsPerMinute:60,tokensPerMinute:1e5}},{name:"claude",apiKey:process.env.ANTHROPIC_API_KEY||"",model:process.env.ANTHROPIC_MODEL||"claude-3-sonnet-20240229",maxTokens:2e3,temperature:.7,enabled:!!process.env.ANTHROPIC_API_KEY,priority:90,rateLimit:{requestsPerMinute:50,tokensPerMinute:8e4}},{name:"gemini",apiKey:process.env.GOOGLE_AI_API_KEY||"",model:process.env.GOOGLE_AI_MODEL||"gemini-1.5-pro",maxTokens:2e3,temperature:.7,enabled:!!process.env.GOOGLE_AI_API_KEY,priority:80,rateLimit:{requestsPerMinute:60,tokensPerMinute:12e4}}],fallbackStrategy:"priority",retryAttempts:2,timeout:3e4},f=null;function y(){return f||(f=new m(g)),f}let v={quiz_analysis:`You are an expert psychologist and researcher helping users understand their quiz results on MyBeing, a self-discovery platform. 

Your role:
- Analyze quiz results with empathy and scientific accuracy
- Provide insights based on psychological research
- Avoid medical diagnoses or clinical advice
- Focus on patterns, growth opportunities, and self-awareness
- Use encouraging, non-judgmental language
- Reference relevant psychological concepts when helpful

Remember: There are no "right" or "wrong" answers in self-discovery. Every result is valid and offers opportunities for growth.`,general_chat:`You are a helpful AI assistant for MyBeing, a self-discovery platform focused on psychology and personal growth.

Your expertise includes:
- Psychology and behavioral science
- Self-awareness and personal development
- Research-backed insights about human behavior
- Pattern recognition in thoughts and behaviors

Guidelines:
- Be empathetic and supportive
- Provide evidence-based insights when possible
- Encourage self-reflection and growth
- Avoid medical or clinical diagnoses
- Focus on empowerment and understanding
- Ask thoughtful follow-up questions`,content_creation:`You are an expert content creator and psychologist helping to develop educational content for MyBeing.

Your role:
- Create engaging, research-backed content about psychology and self-discovery
- Develop quiz questions that promote self-reflection
- Write articles that are accessible yet scientifically grounded
- Focus on practical applications of psychological insights
- Maintain a tone that is professional yet approachable

Content should be:
- Evidence-based and scientifically accurate
- Engaging and easy to understand
- Focused on personal growth and self-awareness
- Non-judgmental and inclusive`};var w=r(65630);let E=w.Ry({messages:w.IX(w.Ry({role:w.Km(["user","assistant","system"]),content:w.Z_()})),context:w.Z_().optional(),quizId:w.Z_().optional(),score:w.Rx().optional(),maxScore:w.Rx().optional(),band:w.Z_().optional(),preferredProvider:w.Z_().optional(),temperature:w.Rx().min(0).max(2).optional(),maxTokens:w.Rx().min(1).max(4e3).optional()});async function x(e){try{let t=await (0,l.getServerSession)(c.L),r=await e.json(),o=E.safeParse(r);if(!o.success)return i.NextResponse.json({error:"Invalid request format",details:o.error.flatten()},{status:400});let{messages:s,context:a="general_chat",quizId:n,score:p,maxScore:u,band:d,preferredProvider:h,temperature:m,maxTokens:g}=o.data,f=y(),w=s.map(e=>({role:e.role,content:e.content,timestamp:new Date})),x=v[a]||v.general_chat;n&&void 0!==p&&void 0!==u&&(x+=`

Context: The user just completed the "${n}" quiz with a score of ${p}/${u}`,d&&(x+=` (${d} range)`),x+=". Please provide insights based on this result and help them understand what it means for their personal growth.");let P=await f.generateResponse(w,{systemPrompt:x,preferredProvider:h,temperature:m,maxTokens:g});return await A({userId:t?.user?.email||void 0,provider:P.provider,model:P.model,tokensUsed:P.usage?.totalTokens||0,responseTime:P.responseTime,context:a,quizId:n,timestamp:new Date}),i.NextResponse.json({message:P.content,provider:P.provider,model:P.model,usage:P.usage,responseTime:P.responseTime})}catch(t){console.error("AI Chat API Error:",t);let e=t instanceof Error?t.message:"Unknown error occurred";if(e.includes("Rate limit"))return i.NextResponse.json({error:"AI service is temporarily busy. Please try again in a moment."},{status:429});if(e.includes("No AI providers available"))return i.NextResponse.json({error:"AI service is currently unavailable. Please try again later."},{status:503});return i.NextResponse.json({error:"Failed to generate AI response. Please try again."},{status:500})}}async function P(){try{let e=y(),t=await e.healthCheck(),r=e.getProviderStatus();return i.NextResponse.json({status:"ok",providers:r,health:t,timestamp:new Date().toISOString()})}catch(e){return i.NextResponse.json({status:"error",error:"Health check failed"},{status:500})}}async function A(e){try{console.log("AI Interaction Log:",{user:e.userId||"anonymous",provider:e.provider,model:e.model,tokens:e.tokensUsed,responseTime:`${e.responseTime}ms`,context:e.context,quiz:e.quizId||"none",timestamp:e.timestamp.toISOString()})}catch(e){console.error("Failed to log AI interaction:",e)}}let _=new s.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/ai/chat/route",pathname:"/api/ai/chat",filename:"route",bundlePath:"app/api/ai/chat/route"},resolvedPagePath:"/Users/niharikasai/mybeing/app/api/ai/chat/route.ts",nextConfigOutput:"standalone",userland:o}),{requestAsyncStorage:k,staticGenerationAsyncStorage:T,serverHooks:I}=_,R="/api/ai/chat/route";function b(){return(0,n.patchFetch)({serverHooks:I,staticGenerationAsyncStorage:T})}},90455:(e,t,r)=>{r.d(t,{L:()=>n});var o=r(77234),s=r(53797);let a=[];process.env.GOOGLE_CLIENT_ID&&process.env.GOOGLE_CLIENT_SECRET&&a.push((0,o.Z)({clientId:process.env.GOOGLE_CLIENT_ID,clientSecret:process.env.GOOGLE_CLIENT_SECRET})),process.env.DEV_CREDENTIALS_PASSWORD&&a.push((0,s.Z)({name:"Dev Login",credentials:{email:{label:"Email",type:"email"},password:{label:"Password",type:"password"}},async authorize(e){let t=e?.email?.toString()||"",r=e?.password?.toString()||"";return t&&r&&r===process.env.DEV_CREDENTIALS_PASSWORD?{id:t,email:t,name:t.split("@")[0]}:null}}));let n={providers:a,secret:process.env.NEXTAUTH_SECRET,session:{strategy:"jwt"},callbacks:{session:async({session:e})=>e}}}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),o=t.X(0,[8948,5972,2830,5630],()=>r(76954));module.exports=o})();