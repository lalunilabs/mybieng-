"use strict";(()=>{var e={};e.id=5450,e.ids=[5450],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},19517:(e,n,a)=>{a.r(n),a.d(n,{originalPathname:()=>f,patchFetch:()=>b,requestAsyncStorage:()=>p,routeModule:()=>l,serverHooks:()=>m,staticGenerationAsyncStorage:()=>y});var r={};a.r(r),a.d(r,{GET:()=>d,dynamic:()=>u});var t=a(49303),s=a(88716),c=a(60670),i=a(87070),o=a(9487);let u="force-dynamic";async function d(e){try{let n=e.cookies.get("sessionId")?.value;if(!n)return i.NextResponse.json([]);let a=(await (0,o.s)(()=>o._.quizRun.findMany({where:{sessionId:n},orderBy:{createdAt:"desc"},include:{answers:!0},take:100}),[])).map(e=>({id:e.id,quizSlug:e.quizSlug,createdAt:e.createdAt,total:e.total,bandLabel:e.bandLabel,answers:Object.fromEntries(e.answers.map(e=>[e.question,e.value]))})),r=i.NextResponse.json(a),t=new Date().toISOString().replace(/[:.]/g,"-");return r.headers.set("Content-Disposition",`attachment; filename="mybeing-runs-${t}.json"`),r}catch(e){return console.error("GET /api/runs/export error",e),i.NextResponse.json({error:"Server error"},{status:500})}}let l=new t.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/runs/export/route",pathname:"/api/runs/export",filename:"route",bundlePath:"app/api/runs/export/route"},resolvedPagePath:"/Users/niharikasai/mybeing/app/api/runs/export/route.ts",nextConfigOutput:"standalone",userland:r}),{requestAsyncStorage:p,staticGenerationAsyncStorage:y,serverHooks:m}=l,f="/api/runs/export/route";function b(){return(0,c.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:y})}},9487:(e,n,a)=>{a.d(n,{_:()=>s,s:()=>c});var r=a(53524);let t=()=>({user:{findMany:async()=>[],findUnique:async()=>null,create:async e=>({id:"mock-user",...e}),count:async()=>0},quizRun:{findMany:async()=>[],findUnique:async()=>null,create:async e=>({id:"mock-run",...e}),count:async()=>0,update:async()=>({}),updateMany:async()=>({})},quizAnswer:{findMany:async()=>[],create:async e=>({id:"mock-answer",...e}),createMany:async()=>({count:0})},subscription:{findUnique:async()=>null,findFirst:async()=>null,findMany:async()=>[],create:async({data:e})=>({id:"mock-sub",...e}),update:async({data:e})=>({id:"mock-sub",...e}),upsert:async({create:e,update:n})=>({id:"mock-sub",...n||e}),delete:async()=>({})},manualDiscount:{findFirst:async()=>null,update:async({data:e})=>({id:"mock-discount",...e}),create:async({data:e})=>({id:"mock-discount",...e})},purchase:{findFirst:async()=>null,findMany:async()=>[],create:async({data:e})=>({id:"mock-purchase",...e}),count:async()=>0},emailLog:{create:async({data:e})=>({id:"mock-email",status:e?.status||"sent",...e}),update:async({where:e,data:n})=>({id:e?.id||"mock-email",...n}),findMany:async()=>[]},newsletter:{create:async e=>({id:"mock-subscriber",...e}),count:async()=>0},$connect:async()=>{},$disconnect:async()=>{},$transaction:async e=>e(void 0)}),s=globalThis.prisma??function(){if(!process.env.DATABASE_URL)return console.warn("No DATABASE_URL found - using mock client"),t();try{return new r.PrismaClient({log:["error"],datasources:{db:{url:process.env.DATABASE_URL}}})}catch(e){return console.error("Failed to create Prisma client:",e),t()}}();async function c(e,n){if(!s)return console.warn("Database not available - returning fallback value"),n;try{return await e()}catch(e){return console.error("Database operation failed:",e),n}}}};var n=require("../../../../webpack-runtime.js");n.C(e);var a=e=>n(n.s=e),r=n.X(0,[8948,5972],()=>a(19517));module.exports=r})();