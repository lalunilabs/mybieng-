"use strict";(()=>{var e={};e.id=3069,e.ids=[3069],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},95923:(e,n,r)=>{r.r(n),r.d(n,{originalPathname:()=>m,patchFetch:()=>f,requestAsyncStorage:()=>d,routeModule:()=>l,serverHooks:()=>y,staticGenerationAsyncStorage:()=>p});var t={};r.r(t),r.d(t,{POST:()=>u});var a=r(49303),s=r(88716),o=r(60670),c=r(52663),i=r(87070);async function u(e){try{let{type:n,itemId:r}=await e.json(),t=await (0,c.s)(()=>c._.like.count({where:{type:n,itemId:r}}),0);return i.NextResponse.json({count:t})}catch(e){return console.error("Error fetching like count:",e),i.NextResponse.json({count:0})}}let l=new a.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/likes/count/route",pathname:"/api/likes/count",filename:"route",bundlePath:"app/api/likes/count/route"},resolvedPagePath:"/Users/niharikasai/mybeing/app/api/likes/count/route.ts",nextConfigOutput:"standalone",userland:t}),{requestAsyncStorage:d,staticGenerationAsyncStorage:p,serverHooks:y}=l,m="/api/likes/count/route";function f(){return(0,o.patchFetch)({serverHooks:y,staticGenerationAsyncStorage:p})}},52663:(e,n,r)=>{r.d(n,{_:()=>s,s:()=>o});let t=require("@prisma/client"),a=()=>({user:{findMany:async()=>[],findUnique:async()=>null,create:async e=>({id:"mock-user",...e}),count:async()=>0},quizRun:{findMany:async()=>[],findUnique:async()=>null,create:async e=>({id:"mock-run",...e}),count:async()=>0,update:async()=>({}),updateMany:async()=>({})},quizAnswer:{findMany:async()=>[],create:async e=>({id:"mock-answer",...e}),createMany:async()=>({count:0})},newsletter:{create:async e=>({id:"mock-subscriber",...e}),count:async()=>0},$connect:async()=>{},$disconnect:async()=>{},$transaction:async e=>e(void 0)}),s=globalThis.prisma??function(){if(!process.env.DATABASE_URL)return console.warn("No DATABASE_URL found - using mock client"),a();try{return new t.PrismaClient({log:["error"],datasources:{db:{url:process.env.DATABASE_URL}}})}catch(e){return console.error("Failed to create Prisma client:",e),a()}}();async function o(e,n){if(!s)return console.warn("Database not available - returning fallback value"),n;try{return await e()}catch(e){return console.error("Database operation failed:",e),n}}}};var n=require("../../../../webpack-runtime.js");n.C(e);var r=e=>n(n.s=e),t=n.X(0,[8948,5972],()=>r(95923));module.exports=t})();