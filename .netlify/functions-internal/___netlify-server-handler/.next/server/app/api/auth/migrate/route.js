"use strict";(()=>{var e={};e.id=3577,e.ids=[3577],e.modules={72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},27790:e=>{e.exports=require("assert")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},17702:e=>{e.exports=require("events")},32615:e=>{e.exports=require("http")},35240:e=>{e.exports=require("https")},86624:e=>{e.exports=require("querystring")},17360:e=>{e.exports=require("url")},21764:e=>{e.exports=require("util")},71568:e=>{e.exports=require("zlib")},89371:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>q,patchFetch:()=>v,requestAsyncStorage:()=>g,routeModule:()=>y,serverHooks:()=>h,staticGenerationAsyncStorage:()=>x});var s={};t.r(s),t.d(s,{POST:()=>m});var n=t(49303),a=t(88716),i=t(60670),o=t(87070),u=t(45609),c=t(90455),l=t(52663),p=t(71615);async function d(e){let r=p.cookies().get("sessionId")?.value;return r?await (0,l.s)(async()=>{let t=await l._.quizRun.findMany({where:{sessionId:r}});return 0===t.length?{migrated:0,message:"No data to migrate"}:(await l._.quizRun.updateMany({where:{sessionId:r},data:{userId:e,sessionId:void 0}}),(0,p.cookies)().delete("sessionId"),{migrated:t.length,message:`Successfully migrated ${t.length} quiz runs`})},{migrated:0,message:"Migration failed"}):{migrated:0,message:"No anonymous session found"}}async function m(e){try{let e=await (0,u.getServerSession)(c.L);if(!e?.user?.email)return o.NextResponse.json({error:"Unauthorized"},{status:401});let r=await d(e.user.email);return o.NextResponse.json({success:!0,...r})}catch(e){return console.error("Migration API error:",e),o.NextResponse.json({error:"Migration failed"},{status:500})}}let y=new n.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/auth/migrate/route",pathname:"/api/auth/migrate",filename:"route",bundlePath:"app/api/auth/migrate/route"},resolvedPagePath:"/Users/niharikasai/mybeing/app/api/auth/migrate/route.ts",nextConfigOutput:"standalone",userland:s}),{requestAsyncStorage:g,staticGenerationAsyncStorage:x,serverHooks:h}=y,q="/api/auth/migrate/route";function v(){return(0,i.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:x})}},90455:(e,r,t)=>{t.d(r,{L:()=>i});var s=t(77234),n=t(53797);let a=[];process.env.GOOGLE_CLIENT_ID&&process.env.GOOGLE_CLIENT_SECRET&&a.push((0,s.Z)({clientId:process.env.GOOGLE_CLIENT_ID,clientSecret:process.env.GOOGLE_CLIENT_SECRET})),process.env.DEV_CREDENTIALS_PASSWORD&&a.push((0,n.Z)({name:"Dev Login",credentials:{email:{label:"Email",type:"email"},password:{label:"Password",type:"password"}},async authorize(e){let r=e?.email?.toString()||"",t=e?.password?.toString()||"";return r&&t&&t===process.env.DEV_CREDENTIALS_PASSWORD?{id:r,email:r,name:r.split("@")[0]}:null}}));let i={providers:a,secret:process.env.NEXTAUTH_SECRET,session:{strategy:"jwt"},callbacks:{session:async({session:e})=>e}}},52663:(e,r,t)=>{t.d(r,{_:()=>a,s:()=>i});let s=require("@prisma/client"),n=()=>({user:{findMany:async()=>[],findUnique:async()=>null,create:async e=>({id:"mock-user",...e}),count:async()=>0},quizRun:{findMany:async()=>[],findUnique:async()=>null,create:async e=>({id:"mock-run",...e}),count:async()=>0,update:async()=>({}),updateMany:async()=>({})},quizAnswer:{findMany:async()=>[],create:async e=>({id:"mock-answer",...e}),createMany:async()=>({count:0})},newsletter:{create:async e=>({id:"mock-subscriber",...e}),count:async()=>0},$connect:async()=>{},$disconnect:async()=>{},$transaction:async e=>e(void 0)}),a=globalThis.prisma??function(){if(!process.env.DATABASE_URL)return console.warn("No DATABASE_URL found - using mock client"),n();try{return new s.PrismaClient({log:["error"],datasources:{db:{url:process.env.DATABASE_URL}}})}catch(e){return console.error("Failed to create Prisma client:",e),n()}}();async function i(e,r){if(!a)return console.warn("Database not available - returning fallback value"),r;try{return await e()}catch(e){return console.error("Database operation failed:",e),r}}}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[8948,5972,2830],()=>t(89371));module.exports=s})();